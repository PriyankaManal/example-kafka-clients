## 
## Copyright (c) 2016 Cisco and/or its affiliates.
## 
## This software is licensed to you under the terms of the Apache License, Version 2.0 (the "License").
## You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
## 
## The code, technical concepts, and all information contained herein, are the property of Cisco Technology, Inc.
## and/or its affiliated entities, under various laws including copyright, international treaties, patent,
## and/or contract. Any use of the material herein must be in accordance with the terms of the License.
## All rights not expressly granted by the License are reserved.
## 
## Unless required by applicable law or agreed to separately in writing, software distributed under the
## License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
## express or implied.


## Could be: INFO, WARN, ERROR, DEBUG
info.level=INFO

############################# Producer Basics #############################
# list of brokers used for bootstrapping knowledge about the rest of the cluster
# format: host1:port1,host2:port2 ...
metadata.broker.list=[::1]:9092

# name of the partitioner class for partitioning events; default partition spreads data randomly
partitioner.class=com.cisco.formatter.SimpleKeyPartitioner

# specifies whether the messages are sent asynchronously (async) or synchronously (sync)
producer.type=sync

# specify the compression codec for all data generated: none, gzip, snappy, lz4.
# the old config values work as well: 0, 1, 2, 3 for none, gzip, snappy, lz4, respectively
compression.codec=none

# allow topic level compression
#compressed.topics=

## Topic metadata refresh interval (default 10 min is too long)
topic.metadata.refresh.interval.ms=2000

############################# Async Producer #############################
# maximum time, in milliseconds, for buffering data on the producer queue 
#queue.buffering.max.ms=

# the maximum size of the blocking queue for buffering on the producer 
#queue.buffering.max.messages=

# Timeout for event enqueue:
# 0: events will be enqueued immediately or dropped if the queue is full
# -ve: enqueue will block indefinitely if the queue is full
# +ve: enqueue will block up to this many milliseconds if the queue is full
#queue.enqueue.timeout.ms=

# the number of messages batched at the producer 
#batch.num.messages=

############################# Kafka topic #############################
group.id=test-prod-avro-user
topic=avro.log.localtest

#################### Dataplatform Message config ######################
dataplatform.message.src=esc
#-- Put the desired network interface to be used for host ip resolution
dataplatform.message.host_ip.fromnic=eth0
#-- Put the desired IP address format: v4 or v6
dataplatform.message.host_ip.format=v6
#-- if no NIC / IP found, use this value
#-- if not set and no NIC / IP found, the program will fail
dataplatform.message.host_ip.default=



############################# Serialization or not #######################
# raw or avro
message.serialization=avro

############################# Avro Settings  #############################
avro.schema=../../schema/dataplatform-raw.avsc
avro.schemaid=23
avro.kafka.message.header=no



